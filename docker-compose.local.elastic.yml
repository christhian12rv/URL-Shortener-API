version: '3'

services:
  auth-api:
    container_name: auth-api
    build:
      context: .
      dockerfile: ./apps/auth-api/Dockerfile.local
    restart: always
    ports:
      - 3000:3000
    env_file:
      - ./apps/auth-api/.env.docker.local
    networks:
      - url_shortener_api_network
    depends_on:
      - apm-server

  url-shortener-api:
    container_name: url-shortener-api
    build:
      context: .
      dockerfile: ./apps/url-shortener-api/Dockerfile.local
    restart: always
    ports:
      - 3001:3001
    env_file:
      - ./apps/url-shortener-api/.env.docker.local
    networks:
      - url_shortener_api_network
    depends_on:
      - apm-server

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      interval: 30s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    networks:
      - url_shortener_api_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    cpus: 0.1
    mem_limit: 256M
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      interval: 40s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
    networks:
      - url_shortener_api_network

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.16
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ['CHOWN', 'DAC_OVERRIDE', 'SETGID', 'SETUID']
    cap_drop: ['ALL']
    ports:
      - 8200:8200
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
    cpus: 0.1
    mem_limit: 256M
    networks:
      - url_shortener_api_network

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.12.1
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
    depends_on:
      - elasticsearch
    networks:
      - url_shortener_api_network

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.12.1
    container_name: metricbeat
    user: root
    restart: unless-stopped
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:ro
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - url_shortener_api_network

networks:
  url_shortener_api_network:
    external: true

volumes:
  es-data:
